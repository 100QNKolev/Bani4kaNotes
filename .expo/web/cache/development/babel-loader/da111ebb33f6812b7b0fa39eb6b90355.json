{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Bani4kaNotes\\\\NoteEditForm.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { formatDate } from \"./util\";\nimport { editNote, getNoteById } from \"./NoteService\";\n\nvar NoteEditForm = function (_Component) {\n  _inherits(NoteEditForm, _Component);\n\n  var _super = _createSuper(NoteEditForm);\n\n  function NoteEditForm() {\n    var _this;\n\n    _classCallCheck(this, NoteEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      id: \"\",\n      title: \"\",\n      date: Date.now(),\n      description: \"\",\n      showDatePicker: false\n    };\n\n    _this.handleChangeTitle = function (value) {\n      _this.setState({\n        title: value\n      });\n    };\n\n    _this.handleChangeDescription = function (value) {\n      _this.setState({\n        description: value\n      });\n    };\n\n    _this.handleDatePress = function () {\n      _this.setState({\n        showDatePicker: true\n      });\n    };\n\n    _this.handleDatePickerHide = function () {\n      _this.setState({\n        showDatePicker: false\n      });\n    };\n\n    _this.handleDatePicked = function (note, selectedDate) {\n      var currentDate = selectedDate || _this.state.date;\n\n      _this.setState({\n        date: currentDate\n      });\n\n      _this.handleDatePickerHide();\n    };\n\n    return _this;\n  }\n\n  _createClass(NoteEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var noteId = this.props.route.params[\"id\"];\n      getNoteById(noteId).then(function (item) {\n        _this2.setState({\n          id: item._id,\n          title: item.title,\n          date: item.date,\n          description: item.description\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Note title\",\n        value: this.state.title,\n        onChangeText: this.handleChangeTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Note date\",\n        value: formatDate(this.state.date),\n        editable: !this.state.showDatePicker,\n        onFocus: this.handleDatePress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }), this.state.showDatePicker && React.createElement(DateTimePicker, {\n        value: this.state.date,\n        mode: \"datetime\",\n        is24Hour: true,\n        onChange: this.handleDatePicked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), React.createElement(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Note description\",\n        value: this.state.description,\n        onChangeText: this.handleChangeDescription,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        title: \"\",\n        onPress: function onPress() {\n          editNote({\n            id: _this3.state.id,\n            title: _this3.state.title,\n            date: formatDate(_this3.state.date),\n            description: _this3.state.description\n          }).then(function () {\n            return _this3.props.navigation.goBack();\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NoteEditForm;\n}(Component);\n\nexport default NoteEditForm;\nvar styles = StyleSheet.create({\n  textInput: {\n    backgroundColor: \"white\",\n    padding: 10,\n    marginTop: 10,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/User/Bani4kaNotes/NoteEditForm.js"],"names":["React","Component","DateTimePicker","formatDate","editNote","getNoteById","NoteEditForm","state","id","title","date","Date","now","description","showDatePicker","handleChangeTitle","value","setState","handleChangeDescription","handleDatePress","handleDatePickerHide","handleDatePicked","note","selectedDate","currentDate","noteId","props","route","params","then","item","_id","styles","textInput","navigation","goBack","StyleSheet","create","backgroundColor","padding","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Button, TextInput, StyleSheet } from \"react-native\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { formatDate } from \"./util\";\r\nimport { editNote, getNoteById } from \"./NoteService\";\r\n\r\nclass NoteEditForm extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    date: Date.now(),\r\n    description: \"\",\r\n    showDatePicker: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const noteId = this.props.route.params[\"id\"];\r\n    getNoteById(noteId)\r\n    .then(item => {\r\n        this.setState({\r\n            id: item._id,\r\n            title: item.title,\r\n            date: item.date,\r\n            description: item.description\r\n        })\r\n    })\r\n  }\r\n\r\n  handleChangeTitle = (value) => {\r\n    this.setState({ title: value });\r\n  };\r\n\r\n  handleChangeDescription = (value) => {\r\n    this.setState({ description: value });\r\n  };\r\n\r\n  handleDatePress = () => {\r\n    this.setState({ showDatePicker: true });\r\n  };\r\n\r\n  handleDatePickerHide = () => {\r\n    this.setState({ showDatePicker: false });\r\n  };\r\n\r\n  handleDatePicked = (note, selectedDate) => {\r\n    const currentDate = selectedDate || this.state.date;\r\n    this.setState({ date: currentDate });\r\n    this.handleDatePickerHide();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <View>\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Note title\"\r\n          value={this.state.title}\r\n          onChangeText={this.handleChangeTitle}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Note date\"\r\n          value={formatDate(this.state.date)}\r\n          editable={!this.state.showDatePicker}\r\n          onFocus={this.handleDatePress}\r\n        />\r\n        {this.state.showDatePicker && (\r\n          <DateTimePicker\r\n            value={this.state.date}\r\n            mode=\"datetime\"\r\n            is24Hour={true}\r\n            onChange={this.handleDatePicked}\r\n          />\r\n        )}\r\n        <TextInput\r\n          style={styles.textInput}\r\n          placeholder=\"Note description\"\r\n          value={this.state.description}\r\n          onChangeText={this.handleChangeDescription}\r\n        />\r\n        <Button\r\n          title=\"\"\r\n          onPress={() => {\r\n            editNote({\r\n              id: this.state.id,\r\n              title: this.state.title,\r\n              date: formatDate(this.state.date),\r\n              description: this.state.description,\r\n            }).then(() => this.props.navigation.goBack());\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n}\r\nexport default NoteEditForm;\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput: {\r\n    backgroundColor: \"white\",\r\n    padding: 10,\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}